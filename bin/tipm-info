#!/usr/bin/env node

/**
 * Module dependencies.
 */

var program = require('commander')
  , component = require('..');

// usage

program.usage('<name> [prop]');

// examples

program.on('--help', function(){
  console.log('  Examples:');
  console.log();
  console.log('    # output remote package.json');
  console.log('    $ module info tipm/monglo');
  console.log();
  console.log('    # output version only');
  console.log('    $ module info tipm/monglo keywords');
  console.log();
});

// parse argv

program.parse(process.argv);

// package

var pkg = program.args.shift();

// props

var props = program.args.shift();

// lookup info

var parts = pkg.split('@');
pkg = parts.shift();
var version = parts.shift() || 'master';
component.info(pkg, version, function(err, json){
  if (err) throw err;

  // reduce props
  if (props) {
    props.split('.').forEach(function(prop){
      json = json[prop];
    });
  }

  // output
  if ('string' == typeof json) {
    process.stdout.write(json);
  } else {
    process.stdout.write(JSON.stringify(json, null, 2));
  }
});

